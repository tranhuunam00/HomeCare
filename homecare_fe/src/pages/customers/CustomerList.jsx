import React, { useState } from "react";
import {
  Table,
  Input,
  Select,
  Tag,
  Row,
  Col,
  Card,
  Dropdown,
  Menu,
  Button,
  Modal,
} from "antd";
import styles from "./CustomerList.module.scss";
import StatusTag from "../../components/StatusTag/StatusTag";
import { FilterOutlined, MoreOutlined } from "@ant-design/icons";
import { useNavigate } from "react-router-dom";

const { Option } = Select;

const customerData = [
  {
    key: "1",
    name: "Nguy·ªÖn VƒÉn A",
    status: "Ch∆∞a x√°c nh·∫≠n",
    createdAt: "24-05-2024",
    total: 100_000_000,
    phoneNumber: "0961766816",
    workplace: "B·ªánh vi·ªán B·∫°ch Mai",
  },
  {
    key: "2",
    name: "Tr·∫ßn Th·ªã B",
    status: "Ch∆∞a x√°c nh·∫≠n",
    createdAt: "04-05-2024",
    total: 15_000_000,
    phoneNumber: "0961766816",
    workplace: "B·ªánh vi·ªán Nhi Trung ∆Ø∆°ng",
  },
  {
    key: "3",
    name: "L√™ VƒÉn C",
    status: "Ch∆∞a x√°c nh·∫≠n",
    createdAt: "04-05-2024",
    total: 60_000_000,
    phoneNumber: "0961766816",
    workplace: "B·ªánh vi·ªán E",
  },
  {
    key: "4",
    name: "Ph·∫°m Th·ªã D",
    status: "ƒêang ho·∫°t ƒë·ªông",
    createdAt: "04-05-2024",
    total: 40_000_000,
    phoneNumber: "0961766816",
    workplace: "B·ªánh vi·ªán Da Li·ªÖu Trung ∆Ø∆°ng",
  },
  {
    key: "5",
    name: "Nguy·ªÖn VƒÉn E",
    status: "ƒêang ho·∫°t ƒë·ªông",
    createdAt: "04-04-2024",
    total: 15_000_000,
    phoneNumber: "0961766816",
    workplace: "B·ªánh vi·ªán 103",
  },
  {
    key: "6",
    name: "Nguy·ªÖn VƒÉn F",
    status: "ƒê√£ ho√†n ti·ªÅn",
    createdAt: "14-04-2025",
    total: 60_000_000,
    phoneNumber: "0961766816",
    workplace: "B·ªánh vi·ªán Vi·ªát ƒê·ª©c",
  },
  {
    key: "7",
    name: "Ph·∫°m Th·ªã G",
    status: "ƒêang ho·∫°t ƒë·ªông",
    createdAt: "04-05-2024",
    total: 40_000_000,
    phoneNumber: "0961766816",
    workplace: "B·ªánh vi·ªán Ph·ª• S·∫£n H√† N·ªôi",
  },
  {
    key: "8",
    name: "L√™ VƒÉn H",
    status: "ƒê√£ ho√†n ti·ªÅn",
    createdAt: "04-05-2024",
    total: 60_000_000,
    phoneNumber: "0961766816",
    workplace: "B·ªánh vi·ªán H·ªØu ngh·ªã Vi·ªát-X√¥",
  },
];

const CustomerList = () => {
  const [searchId, setSearchId] = useState("");
  const [searchName, setSearchName] = useState("");
  const [searchphoneNumber, setSearchphoneNumber] = useState("");
  const [statusFilter, setStatusFilter] = useState("T·∫•t c·∫£");
  const [selectedRowKeys, setSelectedRowKeys] = useState([]);
  const navigate = useNavigate();
  const [isVerifyModalVisible, setIsVerifyModalVisible] = useState(false);
  const [selectedCustomer, setSelectedCustomer] = useState(null);

  const handleAction = (action, record) => {
    if (action === "verify") {
      setSelectedCustomer(record);
      setIsVerifyModalVisible(true);
    } else if (action === "changePassword") {
      console.log("ƒê·ªïi m·∫≠t kh·∫©u:", record);
    }
  };

  const handleConfirmVerify = () => {
    console.log("X√°c th·ª±c v√† g·ª≠i mail cho:", selectedCustomer);
    setIsVerifyModalVisible(false);
    setSelectedCustomer(null);
  };

  const rowSelection = {
    selectedRowKeys,
    onChange: (newSelectedKeys) => setSelectedRowKeys(newSelectedKeys),
  };

  const filteredData = customerData
    .filter((customer) =>
      customer.key.toLowerCase().includes(searchId.toLowerCase())
    )
    .filter((customer) =>
      customer.name.toLowerCase().includes(searchName.toLowerCase())
    )
    .filter((customer) =>
      customer.phoneNumber
        .toLowerCase()
        .includes(searchphoneNumber.toLowerCase())
    )
    .filter((customer) =>
      statusFilter === "T·∫•t c·∫£" ? true : customer.status === statusFilter
    );

  const columns = [
    {
      title: "STT",
      dataIndex: "key",
      key: "key",
      width: 50,
      sorter: (a, b) => a.key.localeCompare(b.key),
    },
    {
      title: "T√™n kh√°ch h√†ng",
      dataIndex: "name",
      key: "name",
      width: 200,
      sorter: (a, b) => a.name.localeCompare(b.name),
    },
    {
      title: "Tr·∫°ng th√°i",
      dataIndex: "status",
      key: "status",
      width: 150,
      render: (status) => <StatusTag status={status} type={"customer"} />,
      filters: [
        { text: "Ch∆∞a x√°c nh·∫≠n", value: "Ch∆∞a x√°c nh·∫≠n" },
        { text: "ƒêang ho·∫°t ƒë·ªông", value: "ƒêang ho·∫°t ƒë·ªông" },
        { text: "ƒê√£ ho√†n ti·ªÅn", value: "ƒê√£ ho√†n ti·ªÅn" },
      ],
      onFilter: (value, record) => record.status === value,
    },
    {
      title: "T·ªïng giao d·ªãch",
      dataIndex: "total",
      key: "total",
      width: 150,
      render: (amount) =>
        amount.toLocaleString("vi-VN", {
          style: "currency",
          currency: "VND",
        }),
      sorter: (a, b) => a.total - b.total,
    },
    {
      title: "S·ªë ƒëi·ªán tho·∫°i",
      dataIndex: "phoneNumber",
      key: "phoneNumber",
      width: 200,
      sorter: (a, b) => a.phoneNumber.localeCompare(b.phoneNumber),
    },
    {
      title: "N∆°i c√¥ng t√°c hi·ªán nay",
      dataIndex: "workplace",
      key: "workplace",
      width: 400,
      sorter: (a, b) => a.workplace.localeCompare(b.workplace),
    },
    {
      title: "Ng√†y tham gia",
      dataIndex: "createdAt",
      key: "createdAt",
      width: 150,
      sorter: (a, b) => new Date(a.createdAt) - new Date(b.createdAt),
    },
    {
      title: "H√†nh ƒë·ªông",
      key: "action",
      width: 120,
      render: (_, record) => (
        <Dropdown
          overlay={
            <Menu
              onClick={(info) => {
                info.domEvent.stopPropagation(); // CH·∫∂N CLICK LAN RA ROW
                handleAction(info.key, record);
              }}
              items={[
                {
                  key: "verify",
                  label: "‚úÖ X√°c th·ª±c",
                },
                {
                  key: "changePassword",
                  label: "üîê ƒê·ªïi m·∫≠t kh·∫©u",
                },
              ]}
            />
          }
          trigger={["click"]}
        >
          <Button
            icon={<MoreOutlined />}
            onClick={(e) => e.stopPropagation()} // ngƒÉn click lan sang row
          />
        </Dropdown>
      ),
    },
  ];

  return (
    <div className={styles.customerList}>
      <div style={{ display: "flex", justifyContent: "space-between" }}>
        <h2 className={styles.customerList__title}>Danh s√°ch kh√°ch h√†ng</h2>
        <Button>Th√™m m·ªõi</Button>
      </div>
      <Row gutter={16} className={styles.filterGroup}>
        <Col span={24}>
          <Card
            title={
              <>
                <FilterOutlined /> B·ªô l·ªçc t√¨m ki·∫øm
              </>
            }
            size="small"
          >
            <Row gutter={16} style={{ justifyContent: "flex-end" }}>
              <Col span={4}>
                <label className={styles.filterLabel}>ID Kh√°ch h√†ng</label>
                <Input
                  placeholder="Nh·∫≠p ID"
                  value={searchId}
                  onChange={(e) => setSearchId(e.target.value)}
                />
              </Col>
              <Col span={4}>
                <label className={styles.filterLabel}>T√™n kh√°ch h√†ng</label>
                <Input
                  placeholder="Nh·∫≠p t√™n"
                  value={searchName}
                  onChange={(e) => setSearchName(e.target.value)}
                />
              </Col>
              <Col span={4}>
                <label className={styles.filterLabel}>C∆° s·ªü</label>
                <Input
                  placeholder="Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i"
                  value={searchphoneNumber}
                  onChange={(e) => setSearchphoneNumber(e.target.value)}
                />
              </Col>
              <Col span={3}>
                <label className={styles.filterLabel}>Tr·∫°ng th√°i</label>
                <Select
                  value={statusFilter}
                  onChange={setStatusFilter}
                  style={{ width: "100%" }}
                >
                  <Option value="T·∫•t c·∫£">T·∫•t c·∫£</Option>
                  <Option value="Ch∆∞a x√°c nh·∫≠n">Ch∆∞a x√°c nh·∫≠n</Option>
                  <Option value="ƒêang ho·∫°t ƒë·ªông">ƒêang ho·∫°t ƒë·ªông</Option>
                  <Option value="ƒê√£ ho√†n ti·ªÅn">ƒê√£ ho√†n ti·ªÅn</Option>
                </Select>
              </Col>
            </Row>
          </Card>
        </Col>
      </Row>
      <Table
        rowSelection={rowSelection}
        className={styles.customerList__table}
        columns={columns}
        dataSource={filteredData}
        pagination={{ pageSize: 5 }}
        onRow={(record) => ({
          onClick: () => navigate("/home/account"),
        })}
        scroll={{ x: true, y: 400 }}
      />
      <Modal
        title="X√°c nh·∫≠n x√°c th·ª±c"
        open={isVerifyModalVisible}
        onOk={handleConfirmVerify}
        onCancel={() => setIsVerifyModalVisible(false)}
        okText="X√°c th·ª±c & G·ª≠i mail"
        cancelText="H·ªßy"
      >
        <p>
          B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√°c th·ª±c t√†i kho·∫£n v√† g·ª≠i email ƒë·∫øn{" "}
          <strong>{selectedCustomer?.name}</strong> kh√¥ng?
        </p>
      </Modal>
    </div>
  );
};

export default CustomerList;
